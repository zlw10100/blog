
1、基本理解
将系统划分成：数据结构+算法。
数据结构被理解成元素对象，算法被理解成访问者，因为算法总是操作（访问）数据的。
当系统的数据结构非常稳定的时候，访问者模式可以灵活的增删访问者（其实就是灵活的增加、减少、替换算法对象）。
模式里的对象结构，其实类似一个元素对象的统一管理者，含有一个列表用于遍历元素对象，主要的目的是：让用户可以在选定一个算法的前提下，展示此算法对所有元素对象的执行结果。
当然，也可以直接使用元素对象的accept方法接受一个访问者，直接查看此访问者（算法对象）对元素对象的执行结果。
如果一个类理解成：属性（数据结构） + 方法（算法），那么访问者模式就是将一个类拆分成了两个类，属性单独一个类称为元素对象，方法单独一个类称为访问者。

关键词：稳定的数据结构，变化的算法对象。

2、难点
理解上的问题，访问者等价于算法对象，对数据结构（也就是元素对象）执行访问。
此模式的优点是可以非常灵活的扩展算法对象（只需要扩展访问者抽象类的子类即可），但是前提要求是数据结构要非常稳定。

3、使用场景
当多个算法对象需要处理的数据对象是非常稳定的，这个时候可以使用。